\input texinfo.tex
@settitle Using GNU Texinfo for HTML and PDF documentation

@copying
How to use GNU Texinfo to produce HTML and PDF documents

Copyright @copyright{} 2020 Henryk Paluch
@end copying

@titlepage
@title Using GNU Texinfo for HTML and PDF documentation
@author Henryk Paluch

@vskip 0pt plus 1fill
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Introduction

Here we will introduce (Proof of Concept) how to use GNU Texinfo to write
technical manual with HTML and PDF output.
@end ifnottex

@menu
* Introduction::
* Setup::

* Index::
@end menu

@node Introduction
@chapter Introduction

The @url{https://www.gnu.org/software/texinfo/manual/texinfo/, GNU Texinfo}
is prefered system to write technical documentation for GNU Programs. This
system was created in late '80 (Manual Copyright starts in 1988).

Originally it could generate only two output formats:

@table @samp
@item DVI
Device Independent format produced with TeX (PDF was yet to
be invented by Adobe :-)

@item Info
Hypertext format (again before World Wide Web was created) for
@samp{info(1)} viewer - however personally I prefer to use
more intuitive @samp{pinfo(1)} viewer.
@end table

Fortunately many things improved over years:

@itemize
@item 
Direct PDF output was possible thanks to new PdfTeX. Before
PdfTex one has to produce DVI, then transform it to PostScript
using @samp{dvi2ps(1)} command and finally convert it to PDF
using Ghostscript's helper script @samp{ps2pdf(1)}.

@item
HTML Output

@item
Embedded Image support 

@end itemize




@node Setup
@chapter Setup

@menu
* System preparation::
* Generating documentation::
* Browse Info output::
@end menu

@node    System preparation
@section System preparation

Tested on @code{Debian 10 (Buster)}.

Install these packages to use Texinfo in our example:

@verbatim
sudo apt-get install git make texinfo info pinfo texlive-binaries \
   texlive-latex-base texlive-plain-generic
@end verbatim

Note: The @code{info(1)} and @code{pinfo(1)} are viewers of 
@code{Info} output formats (hyper-text format used even before
World Wide Web. Similarly we use @code{make(1)} as build system
and @code{git(1)} to checkout our sample project.

Note: We must install @code{texlive-latex-base}, because Texinfo
uses LaTeX fonts.

Now checkout this project from GitHub using:

@verbatim
mkdir -p ~/projects
cd  ~/projects
git clone https://github.com/hpaluch/html-and-pdf-generators.git
cd html-and-pdf-generators
@end verbatim

And follow next section

@node    Generating documentation
@section Generating documentation

Use these commands to generate multiple output formats (PDF, HTML and Info):

@verbatim
cd ~/projects/html-and-pdf-generators/texinfo/
make
@end verbatim

There are following formats generated:

@table @samp
@item TexinfoPoC.pdf
PDF output created with PdfTeX

@item TexinfoPoC/index.html
HTML output (set of files)

@item TexinfoPoC.info
Info hypertext format, could be viewerd
using @samp{pinfo(1)} or @samp{info(1)} commands.

@end table

@node    Browse Info output
@section Browse Info output
@pindex Pinfo usage
To view @file{TexinfoPoC.info} file use this command:

@verbatim
pinfo -f TexinfoPoC.info
@end verbatim

@float Figure,fig:pinfo
@image{pinfo-viewer,16cm}
@caption{Pinfo viewer}
@end float

Please see @ref{fig:pinfo} how @samp{Pinfo viewer} looks alike.

Use arrows keys to select "Link" (active Link is in Red color).
Press @key{ENTER} to Drill Down selected Link.
Finally press @kbd{q} to quit @samp{pinfo(1)}.

Note: Emacs fans may prefer to use original @command{info} to view
Info documentation.

@node Index
@chapter Index

@section Program Index

@printindex pg

@bye
